{"version":3,"sources":["pages/home.js","components/Players.js","components/SetSelect.js","pages/NewGame.js","components/WhiteCard.js","components/LargeWhiteCard.js","components/BlackCard.js","components/Chat.js","pages/GameScreen.js","components/Navbar.js","pages/login.js","pages/register.js","App.js","serviceWorker.js","index.js"],"names":["socket","openSocket","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","decks","lobbyName","lobbyId","user","_this2","on","setState","console","log","e","name","preventDefault","localStorage","getItem","emit","decode","id","_this3","fetch","then","response","json","sets","catch","err","message","_this4","react_default","a","createElement","className","Redirect","to","pathname","Link","placeholder","type","value","onChange","target","onClick","findLobby","Component","Players","players","czarId","mappedPlayers","bots","map","player","key","_id","points","SetSelect","setName","highlight","NewGame","selectedSets","cardSets","redirect","lobbyFail","checkToken","length","handleLobby","selected","includes","splice","indexOf","push","strId","concat","res","blackCards","whiteCards","forEach","item","set","components_SetSelect","highlightSet","_this5","_this$state","src_components_Players","renderSets","createLobby","WhiteCard","_this$props","text","onclick","submit","LargeWhiteCard","card","winner","gameState","classes","BlackCard","pick","Chat","messages","shortId","generate","username","GameScreen","blackCard","hand","selectedWhite","playedCards","messageInput","clientActive","owner","lobby","match","params","czar","winningCard","handleCard","handleGameStart","handleWinCard","handleDisconnect","getPlayers","botName","_this3$state","currPlayed","users","currBlack","_this6","_this7","_this$state2","startGame","components_BlackCard","src_components_LargeWhiteCard","userId","playArea","src_components_Chat","submitMessage","src_components_WhiteCard","selectCard","nextHand","Navbar","isAuthed","removeItem","href","logout","Login","email","password","loginFail","result","setItem","token","body","onSubmit","handleClick","Register","passwordConf","registerFail","registerMsg","App","loading","auth","initializeReactGA","ReactGA","initialize","pageview","src_components_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21dbdd6b.chunk.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable semi */\n\n//need to redo home background and button layout - get rid of image\nimport React, { Component } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport \"./Home.css\"\nimport openSocket from \"socket.io-client\"\nimport decode from \"jwt-decode\"\n\n// const socket = openSocket(\"http://localhost:4000\")\nconst socket = openSocket('https://pixelsagainstpeople.herokuapp.com/')\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      decks: [],\n      lobbyName: \"\",\n      lobbyId: null,\n      user: null\n    }\n  }\n\n  componentWillMount() {\n    socket.on(\"Joined Lobby\", (lobbyId, user) => {\n      this.setState({ lobbyId, user })\n    })\n\n    socket.on(\"Lobby Not Found\", () => {\n      console.log(\"lobby not found\")\n    })\n  }\n\n  findLobby(e, name) {\n    e.preventDefault()\n    if (localStorage.getItem('cahToken')) {\n      socket.emit(\"Join Lobby\", decode(localStorage.getItem('cahToken')).id, name)\n    }\n  }\n\n  componentDidMount() {\n    // generates setlist from the CAH-API\n    fetch(\"https://cards-against-humanity-api.herokuapp.com/sets\")\n      .then(response => response.json())\n      .then(sets => {\n        this.setState({ decks: sets })\n      })\n      .catch(err => console.log(err.message))\n  }\n\n  render() {\n    return (\n      <div className=\"homeContainer\">\n        {this.state.lobbyId && <Redirect to={{ pathname: \"/play-game/\" + this.state.lobbyId, user: this.state.user }} />}\n        <h1>Pixels Against People</h1>\n        <h2>A Cards Against Humanity clone</h2>\n        <div className=\"buttonContainer\">\n          <Link className=\"Link\" to=\"/game\">\n            Create Game\n          </Link>\n          <form>\n            <input\n              placeholder=\"Lobby Name\"\n              type=\"text\"\n              value={this.state.lobbyName}\n              onChange={e => this.setState({ lobbyName: e.target.value })}\n            />\n            <button\n              className=\"Link\"\n              onClick={e => this.findLobby(e, this.state.lobbyName)}\n            >\n              Join Game\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/prop-types */\n/* eslint-disable arrow-body-style */\n/* eslint-disable semi */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\nimport './Players.css'\nimport decode from 'jwt-decode'\n\nconst Players = (props) => {\n  const { players, czarId, bots } = props\n  const mappedPlayers = players.map((player) => {\n    return (\n      <li className=\"player\" key={player.id}>\n        <h3>{decode(localStorage.getItem('cahToken')).id === player._id && 'Me: '}{player.name}{czarId === player.id && \"(Card Czar)\"}</h3>\n        <p>points: {player.points ? player.points : 0}</p>\n      </li>\n    )\n  })\n  return (\n    <div>{mappedPlayers}</div>\n  )\n}\n\nexport default Players;\n","/* eslint-disable semi */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\n\nfunction SetSelect(props) {\n  const { setName, onClick, highlight } = props\n  return (\n    <span className={highlight} onClick={onClick}>{setName}</span>\n  )\n}\n\nexport default SetSelect\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable semi */\nimport React, { Component } from \"react\"\nimport decode from \"jwt-decode\"\n\nimport openSocket from \"socket.io-client\"\nimport { Redirect } from \"react-router-dom\"\nimport \"./NewGame.css\"\nimport \"../components/Players.css\"\nimport Players from \"../components/Players\"\nimport SetSelect from \"../components/SetSelect\"\n\n// const socket = openSocket('http://localhost:4000')\nconst socket = openSocket(\"https://pixelsagainstpeople.herokuapp.com/\")\n\nclass NewGame extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedSets: [\"Base\"],\n      cardSets: [],\n      lobbyId: \"\",\n      lobbyName: \"\",\n      user: \"\",\n      players: [],\n      redirect: false,\n      message: \"\",\n      lobbyFail: false\n    }\n  }\n\n  componentWillMount() {\n    this.checkToken()\n    if (this.state.cardSets.length < 1)\n      fetch(\"https://cards-against-humanity-api.herokuapp.com/sets\")\n        .then(response => response.json())\n        .then(sets => {\n          this.setState({ cardSets: sets })\n        })\n        .catch(err => console.log(err.message))\n    this.handleLobby()\n  }\n\n  checkToken() {\n    if (!localStorage.getItem(\"cahToken\")) {\n      this.setState({ redirect: true })\n    } else {\n      this.setState({ players: [decode(localStorage.getItem(\"cahToken\"))] })\n    }\n  }\n\n  handleLobby() {\n    socket.on(\"Lobby Created\", lobbyId => {\n      this.setState({ lobbyId })\n    })\n\n    socket.on(\"Lobby Creation Fail\", message => {\n      this.setState({ lobbyFail: true, message })\n    })\n  }\n\n  highlightSet(setName) {\n    // adds selected set to state if not already included, removes if it is already included\n    const selected = this.state.selectedSets\n    if (setName === \"Base\") {\n      return null\n    } else if (selected.includes(setName)) {\n      selected.splice(selected.indexOf(setName), 1)\n      this.setState({ selectedSets: selected })\n    } else {\n      selected.push(setName)\n      this.setState({ selectedSets: selected })\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  createLobby(e, strId) {\n    e.preventDefault()\n    fetch(`https://cards-against-humanity-api.herokuapp.com/sets/multi?sets=${this.state.selectedSets}`)\n      .then(res => res.json())\n      .then(res => {\n        let blackCards = []\n        let whiteCards = []\n        res.forEach(item => {\n          blackCards = blackCards.concat(item.blackCards)\n          whiteCards = whiteCards.concat(item.whiteCards)\n        })\n        socket.emit(\n          \"New Game\",\n          decode(localStorage.getItem(\"cahToken\")).id,\n          strId,\n          whiteCards,\n          blackCards\n        )\n      })\n  }\n\n  renderSets(sets) {\n    // maps setnames to elements based on whether or not they are in the selectedsets states\n    return sets.map(set => {\n      const output = this.state.selectedSets.includes(set.setName) ? (\n        <SetSelect\n          onClick={() => this.highlightSet(set.setName)}\n          key={set.setName}\n          setName={set.setName}\n          highlight=\"highlighted\"\n        />\n      ) : (\n          <SetSelect\n            onClick={() => this.highlightSet(set.setName)}\n            key={set.setName}\n            setName={set.setName}\n            highlight=\"unhighlighted\"\n          />\n        )\n      return output\n    })\n  }\n\n  render() {\n    const {\n      lobbyId,\n      players,\n      cardSets,\n      lobbyName,\n      redirect,\n      lobbyFail,\n      message\n    } = this.state\n    return (\n      <div className=\"newGameContainer\">\n        {redirect && <Redirect to=\"/login\" />}\n        {lobbyId && <Redirect to={{ pathname: \"/play-game/\" + lobbyId, user: decode(localStorage.getItem(\"cahToken\")) }} />}\n        <div className=\"players\">\n          <h1>Players</h1>\n          <ul>\n            {/* eslint-disable-next-line react/destructuring-assignment */}\n            <Players players={players} czarId={null} />\n          </ul>\n        </div>\n        <div className=\"setContainer\">\n          <h1>Select The Decks You'd Like to Use</h1>\n          {this.renderSets(cardSets)}\n        </div>\n        <div className=\"startButton\">\n          <form className=\"startForm\">\n            <input\n              type=\"text\"\n              placeholder=\"Lobby Name\"\n              value={lobbyName}\n              onChange={e => this.setState({ lobbyName: e.target.value })}\n            />\n            {lobbyFail ? (\n              <div className=\"lobbyFail\">\n                <span>{message}</span>\n              </div>\n            ) : null}\n            <button type=\"submit\" onClick={e => this.createLobby(e, lobbyName)}>\n              Start\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewGame\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable object-curly-newline */\n/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable semi */\nimport React, { Component } from 'react'\nimport './WhiteCard.css'\n\nclass WhiteCard extends Component {\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const { text, selected, onclick, submit } = this.props\n\n    return (\n      <div onClick={onclick} className={`white-card ${selected ? 'selected' : ''}`}>\n        <p>{text}</p>\n        {selected && (\n        <div className=\"overlay\" onClick={submit}>\n          <p>Confirm?</p>\n        </div>\n        )\n        }\n      </div>\n    )\n  }\n}\n\nexport default WhiteCard\n","/* eslint-disable arrow-body-style */\n/* eslint-disable semi */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\nimport './LargeWhiteCard.css'\n\nconst LargeWhiteCard = (props) => {\n  const { card, winner, gameState } = props\n  let classes = \"\"\n  if (winner) {\n    if (card.user.id === winner.user.id) {\n      classes = 'winning-card'\n    }\n  }\n  return (\n    <div className={\"lwc \" + classes}>\n      {gameState === \"Selecting\" ? <div><p>{card.card}</p><p>{winner && card.name}</p></div> : <p className=\"hidden\">Pixels Aginst People</p>}\n    </div>\n  )\n}\n\nexport default LargeWhiteCard\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable semi */\nimport React from 'react'\nimport './BlackCard.css'\n\nfunction BlackCard(props) {\n  const { card } = props\n  const { text, pick } = card\n  return (\n    <div className=\"black-card\">\n      <p>{text}</p>\n      <div>\n        <p>Pick: </p>\n        <div>{pick}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlackCard\n","/* eslint-disable react/prop-types */\n/* eslint-disable arrow-body-style */\n/* eslint-disable semi */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\nimport shortId from 'short-id'\nimport './Chat.css'\n\nconst Chat = (props) => {\n\n  return (\n    <ul>\n      {props.messages.map(message => <li key={shortId.generate()}><span className=\"username\">{message.username}</span>: <span className=\"message\">{message.text}</span></li>)}\n    </ul>\n  )\n}\n\nexport default Chat\n","/* eslint-disable react/jsx-closing-tag-location */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable arrow-body-style */\n/* eslint-disable semi */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from \"react\"\nimport openSocket from \"socket.io-client\"\n\nimport { Redirect } from \"react-router-dom\"\nimport \"./GameScreen.css\"\nimport WhiteCard from \"../components/WhiteCard\"\nimport LargeWhiteCard from \"../components/LargeWhiteCard\"\nimport BlackCard from \"../components/BlackCard\"\nimport Chat from \"../components/Chat\"\nimport Players from \"../components/Players\"\nimport decode from \"jwt-decode\"\n\nconst socket = openSocket('http://localhost:4000')\n// const socket = openSocket('https://pixelsagainstpeople.herokuapp.com/')\n\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      blackCard: {},\n      hand: [],\n      players: [],\n      selectedWhite: null,\n      playedCards: [],\n      user: null,\n      messages: [],\n      messageInput: \"\",\n      gameState: \"Idle\",\n      clientActive: true, //Playing or not\n      owner: false,\n      lobby: this.props.match.params.lobbyId,\n      czar: false,\n      czarId: \"\",\n      winningCard: null,\n    }\n  }\n\n  componentWillMount() {\n    // this.handlePlayers()\n    // this.handleMessage()\n    this.handleCard()\n    this.handleGameStart()\n    this.handleWinCard()\n    this.handleDisconnect()\n  }\n\n  componentDidMount() {\n    this.getPlayers()\n    if (localStorage.getItem(\"cahToken\")) {\n      this.setState({ user: decode(localStorage.getItem(\"cahToken\")) })\n    }\n  }\n\n  handleDisconnect() {\n    socket.on('disconnect', () => {\n      // mark player as disconnected\n    })\n  }\n\n  // handleAICzar() {\n  //   socket.on(\"AI Czar\", (lobbyId, card) => {\n  //     console.log(\"selecting winner\")\n  //     socket.emit(\"Select Winner\", lobbyId, card)\n  //   })\n  // }\n\n  nextHand() {\n    socket.emit(\"Start Hand\", this.state.lobby, false)\n  }\n\n  //adding bot user\n  addbot(botName) {\n    socket.emit(\"Add Bot\", (botName, this.state.lobbyId))\n    socket.on(\"Bot Added\", players => {\n      this.setState({ players })\n    })\n  }\n\n  handleCard() {\n    socket.on(\"Selection\", lobby => {\n      let { hand, czar, clientActive } = this.state\n      if (czar) {\n        clientActive = true\n        hand = lobby.currPlayed.map(card => card.card)\n      }\n      this.setState({ playedCards: lobby.currPlayed, gameState: \"Selecting\", hand, clientActive })\n    })\n    socket.on(\"Update Cards\", lobby => {\n      console.log(this.state.players)\n      this.setState({ playedCards: lobby.currPlayed })\n    })\n  }\n\n  getPlayers() {\n    socket.emit(\"Update Players\", this.state.lobby)\n    socket.on(\"Players Updated\", lobby => {\n      const players = lobby.users\n      if (this.state.user.id === lobby.owner) {\n        this.setState({ owner: true })\n      }\n      this.setState({ players })\n    })\n  }\n\n  handleGameStart() {\n    socket.on(\"Hand Started\", lobby => {\n      let hand = null\n      let czar = false\n      let clientActive = true\n      lobby.users.forEach(user => {\n        if (user._id === this.state.user.id) {\n          hand = user.hand\n        }\n      })\n      if (this.state.user.id === lobby.czar) {\n        czar = true\n        clientActive = false\n      }\n      this.setState({ players: lobby.users, blackCard: lobby.currBlack, gameState: \"Playing\", czar, clientActive, hand, playedCards: lobby.currPlayed, winningCard: null })\n    })\n  }\n\n  handleWinCard() {\n    socket.on(\"Winning Card\", winningCard => {\n      this.setState({ winningCard })\n    })\n  }\n\n  // handlePlayers() {\n  //   socket.on(\"Update Players\", lobby => {\n  //     const {\n  //       users: players,\n  //       gameState,\n  //       currBlack: blackCard,\n  //       czar: czarId,\n  //       playedWhite: playedCards\n  //     } = lobby\n  //     const player = players.reduce((me, player) =>\n  //       player.id === this.state.user._id ? player : me\n  //     )\n  //     const owner = player.owner\n  //     let whiteCards = player.cards\n  //     let czar = false\n  //     if (czarId === player.id) {\n  //       czar = true\n  //     }\n  //     let clientActive = false\n  //     if (!player.played) {\n  //       if (gameState === \"Playing\") {\n  //         if (!czar) {\n  //           clientActive = true\n  //         }\n  //       } else if (gameState === \"Selecting\") {\n  //         if (czar) {\n  //           clientActive = true\n  //           whiteCards = lobby.playedWhite.map(card => card.card)\n  //         }\n  //       }\n  //     }\n  //     this.setState({\n  //       players,\n  //       whiteCards,\n  //       gameState,\n  //       owner,\n  //       blackCard,\n  //       czar,\n  //       clientActive,\n  //       playedCards,\n  //       czarId,\n  //       winningCard: null\n  //     })\n  //   })\n  // }\n\n  // handleMessage() {\n  //   socket.on(\"New Message\", (text, username) => {\n  //     this.setState({\n  //       messages: this.state.messages.concat({ username, text })\n  //     })\n  //   })\n  // }\n\n  selectCard(card) {\n    this.setState({ selectedWhite: card })\n  }\n\n  submit(card) {\n    // eslint-disable-next-line prefer-const\n    let {\n      hand,\n      playedCards,\n      clientActive,\n      user,\n      lobby,\n      czar,\n      gameState\n    } = this.state\n    if (clientActive) {\n      if (!czar && gameState === \"Playing\") {\n        hand.splice(hand.indexOf(card), 1)\n        socket.emit(\"Play Card\", lobby, user, card)\n        this.setState({ hand, playedCards, clientActive: false })\n      } else if (czar && gameState === \"Selecting\") {\n        socket.emit(\"Pick Card\", lobby, card)\n        this.setState({ czar: false, clientActive: false })\n      }\n    }\n  }\n\n  submitMessage(e, message) {\n    e.preventDefault()\n    this.setState({ messageInput: \"\" })\n    socket.emit(\"Chat Message\", message, this.state.user.name, this.state.lobby)\n  }\n\n  startGame() {\n    socket.emit(\"Start Hand\", this.state.lobby, true)\n  }\n\n  render() {\n    let redirect = true\n    if (localStorage.getItem(\"cahToken\")) {\n      redirect = false\n    }\n    const {\n      players,\n      playedCards,\n      blackCard,\n      hand,\n      selectedWhite,\n      messageInput,\n      messages,\n      gameState,\n      clientActive,\n      owner,\n      czar,\n      czarId,\n      winningCard,\n      bots\n    } = this.state\n\n    const playArea = () => {\n      switch (gameState) {\n        case \"Idle\":\n          return (\n            <div className=\"play-area\">\n              <div className=\"start-area\">\n                <h1>Waiting For {3 - players.length > 0 ? 3 - players.length : null} Players</h1>\n                {players.length >= 3 && owner && (<button onClick={() => this.startGame()}>Start Game</button>)}\n              </div>\n            </div>\n          )\n        case \"Playing\":\n          return (\n            <div className=\"play-area\">\n              <BlackCard card={blackCard} />\n              {playedCards.map(card => {\n                return (\n                  <LargeWhiteCard\n                    key={card.card + card.user}\n                    card={card}\n                    gameState={gameState}\n                  />\n                )\n              })}\n            </div>\n          )\n        case \"Selecting\":\n          return (\n            <div className=\"play-area\">\n              <BlackCard card={blackCard} />\n              {!czar &&\n                playedCards.map(card => {\n                  return (\n                    <LargeWhiteCard\n                      key={card.card + card.userId}\n                      card={card}\n                      gameState={gameState}\n                      winner={winningCard}\n                    />\n                  )\n                })}\n            </div>\n          )\n        default:\n          return <p>it broke dude</p>\n      }\n    }\n\n    return (\n      <div className=\"game-screen\">\n        {redirect && <Redirect to=\"/login\" />}\n        <div className=\"players\">\n          <h1>Players</h1>\n          <ul>\n            {/* eslint-disable-next-line react/destructuring-assignment */}\n            <Players players={players} bots={bots} czarId={czarId} />\n          </ul>\n        </div>\n        {playArea()}\n\n        <div className=\"chat-area\">\n          <h1>Chat</h1>\n          <Chat messages={messages} />\n          <form>\n            <input\n              type=\"text\"\n              placeholder=\"Say Something\"\n              value={messageInput}\n              onChange={e => this.setState({ messageInput: e.target.value })}\n            />\n            <button\n              type=\"submit\"\n              onClick={e => this.submitMessage(e, messageInput)}\n            >\n              Say Something\n            </button>\n          </form>\n        </div>\n        <div className=\"white-cards\">\n          {clientActive ? (\n            <ul>\n              {hand.map(card => {\n                return (\n                  <li key={card}>\n                    <WhiteCard\n                      text={card}\n                      selected={card === selectedWhite}\n                      onclick={() => this.selectCard(card)}\n                      submit={() => this.submit(card)}\n                    />\n                  </li>\n                )\n              })}\n            </ul>\n          ) : (\n              <div className=\"inactive\">\n                {gameState === \"Playing\" ? (\n                  czar ? (\n                    <h1>You are the Card Czar</h1>\n                  ) : (\n                      <h1>You already played a card</h1>\n                    )\n                ) : gameState === \"Idle\" ? (\n                  <h1>Waiting for the game to start</h1>\n                ) : winningCard ? (\n                  <div>\n                    <h1>{winningCard.user.name} Won the Round</h1>{\" \"}\n                    <button onClick={() => this.nextHand()}>next hand</button>\n                  </div>\n                ) : (\n                        <h1>Card czar is picking a winner</h1>\n                      )}\n              </div>\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GameScreen\n","/* eslint-disable semi */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css'\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isAuthed: false,\n    }\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem('cahToken')) {\n      this.setState({ isAuthed: true })\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('cahToken')\n    this.setState({ isAuthed: false })\n  }\n\n  componentDidUpdate() {\n    if (localStorage.getItem('cahToken')) {\n      if (!this.state.isAuthed) {\n        this.setState({ isAuthed: true })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <h2>Pixels Against People</h2>\n        {this.state.isAuthed ?\n          <ul>\n            <li><Link to=\"/\">Home<div></div></Link></li>\n            <li><Link to=\"/game\">New Game<div></div></Link></li>\n            <li><Link to=\"/user/:id\">Profile<div></div></Link></li>\n            <li><a href='#' onClick={() => this.logout()}>Logout<div></div></a></li>\n          </ul>\n          :\n          <ul>\n            <li><Link to=\"/\">Home<div></div></Link></li>\n            <li><Link to=\"/game\">New Game<div></div></Link></li>\n            <li><Link to=\"/register\">Sign Up<div></div></Link></li>\n            <li><Link to=\"/login\">Log in<div></div></Link></li>\n          </ul>\n        }\n      </nav >\n    )\n  }\n}\n\nexport default Navbar\n","import React, { Component } from \"react\"\nimport \"./login.css\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport openSocket from \"socket.io-client\"\n\n// const socket = openSocket(\"http://localhost:4000\")\nconst socket = openSocket('https://pixelsagainstpeople.herokuapp.com/')\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      password: \"\",\n      redirect: false,\n      loginFail: false,\n      userId: \"\"\n    }\n  }\n\n  componentWillMount() {\n    socket.on(\"authRes\", res => {\n      if (res.result === \"Success\") {\n        localStorage.setItem(\"cahToken\", res.token)\n        // will activate the redirect component, sending user to the next page when the page renders\n        this.setState({\n          redirect: true\n        })\n      } else {\n        // renders a box stating the username or password is incorrect\n        this.setState({ loginFail: true })\n      }\n    })\n  }\n\n  handleClick(e) {\n    e.preventDefault()\n    // checking login credentials\n    const { email, password } = this.state\n    const body = { email, password }\n\n    socket.emit(\"Login\", body)\n  }\n\n  render() {\n    const { redirect } = this.state\n    return (\n      <div className=\"authContainer\">\n        <h1>PAP</h1>\n        <div className=\"signup\">\n          {redirect && <Redirect to=\"/\" />}\n          <h1>Welcome Back</h1>\n          {this.state.loginFail && (\n            <div className=\"loginFail\">\n              <span>Username or Password Incorrect</span>\n            </div>\n          )}\n          <form onSubmit={e => this.handleClick(e)}>\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={e => this.setState({ email: e.target.value })}\n              value={this.state.email}\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={e => this.setState({ password: e.target.value })}\n              value={this.state.password}\n            />\n            <button type=\"submit\" name=\"register\">\n              Login\n            </button>\n          </form>\n          <span>\n            New around here?\n            <Link to=\"/register\"> Create an Account</Link>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable semi */\nimport React, { Component } from 'react'\nimport './login.css'\nimport { Link, Redirect } from 'react-router-dom'\nimport openSocket from 'socket.io-client'\n\n// const socket = openSocket('http://localhost:4000')\nconst socket = openSocket('https://pixelsagainstpeople.herokuapp.com/')\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordConf: '',\n      redirect: false,\n      registerFail: false,\n      registerMsg: '',\n    }\n  }\n\n  componentWillMount() {\n    socket.on('authRes', res => {\n      console.log(\"response recieved\")\n      if (res.result === 'Success') {\n        localStorage.setItem('cahToken', res.token)\n        // will activate the redirect component, sending user to the next page when the page renders\n        this.setState({ redirect: true })\n      } else {\n        this.setState({ registerFail: true, registerMsg: 'This email is already in use' })\n      }\n    })\n  }\n\n  handleClick(e) {\n    e.preventDefault()\n    // checking login credentials\n    const { email, name, password, passwordConf } = this.state\n    const body = { email, name, password, passwordConf }\n    if (email.length >= 1) {\n      if (name.length >= 1) {\n        if (password.length >= 1) {\n          if (passwordConf.length >= 1) {\n            socket.emit('Register', body)\n          } else {\n            this.setState({ registerFail: true, registerMsg: 'Password Confirmation is required' })\n          }\n        } else {\n          this.setState({ registerFail: true, registerMsg: 'Password is required' })\n        }\n      } else {\n        this.setState({ registerFail: true, registerMsg: 'Nickname is required' })\n      }\n    } else {\n      this.setState({ registerFail: true, registerMsg: 'Email is required' })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"authContainer\">\n        <h1>PAP</h1>\n        {this.state.redirect && <Redirect to=\"/\" />}\n        <div className=\"signup\">\n          <h2>Join Today</h2>\n          <form onSubmit={e => this.handleClick(e)}>\n            {this.state.registerFail && <div className=\"loginFail\"><span>{this.state.registerMsg}</span></div>}\n            <input type=\"text\" name=\"name\" placeholder=\"Nickname\" onChange={e => this.setState({ name: e.target.value })} value={this.state.name} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={e => this.setState({ email: e.target.value })} value={this.state.email} />\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={e => this.setState({ password: e.target.value })} value={this.state.password} />\n            <input type=\"password\" name=\"passwordConf\" placeholder=\"Password Confirmation\" onChange={e => this.setState({ passwordConf: e.target.value })} value={this.state.passwordConf} />\n            <button type=\"submit\" name=\"register\">Register</button>\n          </form>\n          <span>\n            Already Have an Account?\n            <Link to=\"/login\"> Login</Link>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import React, { Component } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport \"./app.css\"\nimport Home from \"./pages/home\"\nimport NewGame from \"./pages/NewGame\"\nimport GameScreen from \"./pages/GameScreen\"\nimport Navbar from \"./components/Navbar\"\nimport Login from \"./pages/login\"\nimport Register from \"./pages/register\"\nimport ReactGA from 'react-ga'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      auth: true\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ loading: false })\n    this.initializeReactGA()\n  }\n\n  initializeReactGA() {\n    ReactGA.initialize('UA-151565115-1');\n    ReactGA.pageview('/');\n  }\n\n  render() {\n    const { loading } = this.state\n\n    if (loading) {\n      return null\n    }\n\n    return (\n      <div className=\"mainContainer\">\n        <Navbar auth={this.state.auth} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/game\" component={NewGame} />\n          <Route path=\"/play-game/:lobbyId\" component={GameScreen} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}